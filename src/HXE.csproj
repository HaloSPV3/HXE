<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputPath>..\bin\$(Configuration)</OutputPath>
    <Platform>AnyCPU</Platform>
    <Prefer32Bit>false</Prefer32Bit>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <!-- <TargetFrameworks>net6.0;net7.0</TargetFrameworks> --> <!-- If encountering weird build issues, try commenting-out this property -->
    <RuntimeIdentifiers>win7-x64;win7-x86;linux-x64;linux-musl-x64</RuntimeIdentifiers><!-- We only publish for win7-x86 and linux-x64. Win7-x64 is present for 64-bit-only debuggers -->
    <StartupObject>HXE.Program</StartupObject>
    <AssemblyName>HXE</AssemblyName>
    <RootNamespace>HXE</RootNamespace>
    <!-- Application | Resources -->
    <ApplicationIcon>Assets\icon.ico</ApplicationIcon>
    <!-- Build | General -->
    <Deterministic>true</Deterministic>
    <!-- Build | Events -->
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent> <!-- Ensures GitVersion, SourceLink tasks only run after successful builds -->
    <!-- Build | Strong Naming -->
    <!-- Publish -->
    <IsTrimmable>true</IsTrimmable>
    <!-- Misc -->
    <ProjectGuid>{ACAA5D9F-B23D-43E1-B2DF-8C03230975A1}</ProjectGuid>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <ProductName>HXE</ProductName>
    <PublisherName>Halo SPV3 Team</PublisherName>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <InvariantGlobalization>true</InvariantGlobalization>
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    <ApplicationManifest>app.manifest</ApplicationManifest> <!-- Windows only. Used for defining supported OSs. https://learn.microsoft.com/en-us/windows/win32/sbscs/application-manifests#supportedos -->
    <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
    <GenerateFullPaths>true</GenerateFullPaths>
    <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
  </PropertyGroup>

  <PropertyGroup Label="Analyzers">
    <RunCodeAnalysis>true</RunCodeAnalysis>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <EnableTrimAnalyzer>true</EnableTrimAnalyzer>
    <EnableSingleFileAnalyzer>true</EnableSingleFileAnalyzer>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <!--<PublishTrimmed>true</PublishTrimmed> --> <!-- Waiting for trim-compatible WPF -->
    <DefineConstants>TRACE</DefineConstants>
    <PublishSingleFile>true</PublishSingleFile>
    <RuntimeIdentifier Condition="'$(RuntimeIdentifier)' == '' AND '$(PublishSingleFile)' == 'true'">win7-x86</RuntimeIdentifier>
    <SelfContained Condition="'$(SelfContained)' == '' AND '$(RuntimeIdentifier)' != ''">true</SelfContained>
    <Win7SF>$([MSBuild]::VersionGreaterThanOrEquals($(NETCoreSdkVersion), '6.0.300'))</Win7SF>
    <PublishSingleFile Condition="'$(PublishSingleFile)' == 'true' AND $(RuntimeIdentifier.Contains('win7'))">$(Win7SF)</PublishSingleFile>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(PublishSingleFile)' == 'true'">
    <SelfContained>true</SelfContained>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <EnableCompressionInSingleFile Condition="$(TargetFramework.Contains('net6'))">true</EnableCompressionInSingleFile>
  </PropertyGroup>

  <PropertyGroup Label="Nuget Properties">
    <!-- <PackageId>PackageId</PackageId> --><!-- TODO -->
    <!-- <Title>PackageId</Title> --><!-- TODO -->
    <!-- <Version>1.0.0</Version> --> <!-- Autofilled by GitVersion -->
    <Authors>HaloSPV3</Authors>
    <Company>github/HaloSPV3</Company>
    <ProductName>HXE</ProductName>
    <Product>$(ProductName)</Product>
    <Description>A HCE wrapper and SPV3 loader</Description>
    <Copyright>Copyright Â© 2023 Noah Sherwin</Copyright>
    <PackageLicenseExpression>Zlib</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/HaloSPV3/HXE</PackageProjectUrl>
    <PackageIconUrl>https://github.com/HaloSPV3/HXE/blob/main/src/Assets/icon.png</PackageIconUrl>
    <PackageIcon>icon.png</PackageIcon>
    <PackageTags>Halo</PackageTags>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
    <!-- <PackageReleaseNotes>http://Your.ReleaseNotes.Url</PackageReleaseNotes> --><!-- TODO -->
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <RepositoryUrl>https://github.com/HaloSPV3/HXE</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <IncludeSymbols>true</IncludeSymbols>
    <IncludeSource>true</IncludeSource>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\.github\**\*.*">
      <Link>.github\%(RecursiveDir)%(Filename)%(Extension)</Link>
    </None>
    <None Include="..\doc\**\*.*">
      <Link>.docs\%(RecursiveDir)%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Include="..\*.md">
      <Link>.docs-misc\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Include="*.txt">
      <Link>.docs-misc\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
    <None Include="src.licenseheader">
      <Link>.docs-misc\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <!-- Campaign Support -->
    <Content Include="Campaigns\*.xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <TargetPath>%(FileName).xml</TargetPath>
    </Content>
    <!-- Assets -->
    <EmbeddedResource Include="..\ext\halo-ce-patches\patches.crk">
      <Link>Assets\%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Include="Assets\343I_DER.cer" />
    <Content Include="Assets\icon.ico" />
  </ItemGroup>

  <ItemGroup Label="NuGet Package Items">
    <None Include="Assets\icon.png" Pack="true" PackagePath="\" />
    <None Include="..\readme.md" Pack="true" PackagePath="\">
      <Link>.docs-misc\readme.md</Link>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectCapability Include="Avalonia" />
    <None
      Generator="Avalonia.Generators.NameGenerator.AvaloniaNameSourceGenerator"
      Include=".\obj\Debug\net6.0\generated\Avalonia.Generators\Avalonia.Generators.NameGenerator.AvaloniaNameSourceGenerator\*.*"
      Link="%(Filename)%(Extension)" />
    <TrimmerRootAssembly Include="Avalonia.Themes.Fluent" />
    <TrimmerRootAssembly Include="Avalonia.Themes.Simple" />
    <AvaloniaResource Include="Assets\icon.ico" />
    <AvaloniaResource Include="GUI\**\*.axaml" />
    <AvaloniaResource Include="GUI\**\*.xaml" />
    <Watch Include="**\*.axaml" />
    <Watch Include="**\*.xaml" />
  </ItemGroup>

  <ItemGroup Label="Package References">
    <PackageReference Include="Avalonia" Version="11.0.0-rc1.1" />
    <PackageReference Include="Avalonia.Desktop" Version="11.0.0-rc1.1" />
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.0.0-rc1.1" />
    <PackageReference Include="Avalonia.Fonts.Inter" Version="11.0.0-rc1.1" />
    <!-- <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.0-rc1.1" /> -->
    <PackageReference Include="Avalonia.Themes.Simple" Version="11.0.0-rc1.1" />
    <PackageReference Include="Avalonia.Themes.Fluent" Version="11.0.0-rc1.1" />
    <!-- <PackageReference Include="Live.Avalonia" Version="2.*.*-*" /> --> <!-- uncomment when Live.Avalonia is upgraded to Avalonia 11 -->
    <PackageReference Include="MessageBox.Avalonia" Version="2.3.1-rc1" />
    <PackageReference Include="GitVersion.MsBuild" Version="5.11.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="all" />
  </ItemGroup>

  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <Exec Command="pwsh $(MSBuildProjectDirectory)\.msb.prebuild.ps1" />
  </Target>

  <Target Name="UpdateLatestBuildPath" AfterTargets="PostBuildEvent">
    <PropertyGroup>
      <ULBP_LatestBuildPath>$([System.IO.Path]::GetFullPath('..\bin\$(Configuration)\Latest\'))</ULBP_LatestBuildPath>
      <ULBP_OutputFullPath>$([System.IO.Path]::GetFullPath('$(OutputPath)'))</ULBP_OutputFullPath>
    </PropertyGroup>
    <RemoveDir Directories="$(ULBP_LatestBuildPath)" />
    <ItemGroup>
      <MySourceFiles Include="$(ULBP_OutputFullPath)\**\*.*" />
    </ItemGroup>
    <Message Text="Files to copy: @(MySourceFiles)" />
    <Copy SourceFiles="@(MySourceFiles)" DestinationFolder="$(ULBP_LatestBuildPath)%(MySourceFiles.RecursiveDir)">
      <Output TaskParameter="CopiedFiles" ItemName="CopiedSrcFiles" />
    </Copy>
    <Message Text="Files Copied: %(CopiedSrcFiles.FullPath)" />
    <Message Text="Build output copied to '$(ULBP_LatestBuildPath)'" Importance="High" />
  </Target>
</Project>
